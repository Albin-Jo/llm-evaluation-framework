/* Path: libs/feature/llm-eval/src/lib/components/simple-json-viewer/simple-json-viewer.component.scss */
@import '../../../../../styles/variables';
@import '../../../../../styles/mixins';

:host {
  display: block;
  width: 100%;
}

.json-viewer {
  width: 100%;
  border: 1px solid $border-color;
  border-radius: $radius-sm;
  background-color: $background-light;
  overflow: hidden;
}

.json-viewer-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: $spacing-2 $spacing-3;
  background-color: rgba($background, 0.6);
  border-bottom: 1px solid $border-color;

  .viewer-title {
    font-size: $font-size-sm;
    font-weight: $font-weight-medium;
    color: $text-primary;
  }

  .copy-button {
    background: none;
    border: none;
    color: $primary;
    font-size: $font-size-xs;
    cursor: pointer;
    padding: $spacing-1 $spacing-2;
    border-radius: $radius-sm;
    transition: background-color 0.2s;

    &:hover {
      background-color: rgba($primary, 0.1);
    }
  }
}

.json-content {
  padding: $spacing-3;
  margin: 0;
  font-family: $font-family-mono;
  font-size: $font-size-xs;
  line-height: 1.5;
  color: $text-primary;
  white-space: pre-wrap;
  word-break: break-word;
  max-height: 300px;
  overflow-y: auto;

  // Styling for syntax highlighting appearance without actual highlighting
  .key {
    color: $primary;
  }

  .string {
    color: $success;
  }

  .number {
    color: $warning;
  }

  .boolean {
    color: $primary-dark;
  }

  .null {
    color: $text-tertiary;
    font-style: italic;
  }
}