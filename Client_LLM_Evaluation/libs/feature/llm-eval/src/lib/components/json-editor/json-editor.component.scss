/* Path: libs/feature/llm-eval/src/lib/components/json-editor/json-editor.component.scss */
@import '../../../../../../styles/variables';
@import '../../../../../../styles/mixins';

:host {
  display: block;
  width: 100%;
}

.json-editor {
  display: flex;
  flex-direction: column;
  width: 100%;
  gap: $spacing-2;
}

// Preview section
.json-preview-section {
  display: flex;
  flex-direction: column;
  width: 100%;
  
  .json-label {
    font-size: $font-size-sm;
    font-weight: $font-weight-medium;
    margin-bottom: $spacing-1;
    color: $text-primary;
    
    &.required::after {
      content: "*";
      color: $error;
      margin-left: $spacing-1;
    }
  }
  
  .json-preview {
    width: 100%;
    min-height: 40px;
    padding: $spacing-2 $spacing-3;
    background-color: $background-light;
    border: 1px solid $border-color;
    border-radius: $radius-sm;
    font-family: $font-family-mono;
    font-size: $font-size-xs;
    color: $text-secondary;
    cursor: pointer;
    transition: border-color 0.2s, box-shadow 0.2s;
    display: flex;
    align-items: center;
    justify-content: space-between;
    overflow: hidden;
    
    &:hover {
      border-color: $primary;
      background-color: rgba($primary, 0.02);
    }
    
    &.invalid {
      border-color: $error;
      background-color: rgba($error, 0.02);
    }
    
    .preview-text {
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      flex: 1;
    }
    
    .error-indicator {
      margin-left: $spacing-2;
      color: $error;
    }
  }
  
  .json-error {
    font-size: $font-size-xs;
    color: $error;
    margin-top: $spacing-1;
  }
}

// Action buttons
.json-actions {
  display: flex;
  justify-content: flex-end;
  gap: $spacing-2;
  margin-top: $spacing-1;
  
  .add-key-btn, .edit-json-btn {
    font-size: $font-size-xs;
    height: 32px;
    min-width: 100px;
  }
}

// Modal styles
.modal-overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.5);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 10000;
  animation: fadeIn 0.2s ease;
}

.modal-dialog {
  background-color: white;
  border-radius: $radius-lg;
  width: 90%;
  max-width: 700px;
  max-height: 90vh;
  box-shadow: $shadow-lg;
  display: flex;
  flex-direction: column;
  animation: scaleIn 0.2s ease;
  overflow: hidden;
  z-index: 10001; // Higher than overlay to ensure proper event handling
}

.modal-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: $spacing-4;
  border-bottom: 1px solid $border-color;
  
  .modal-title {
    margin: 0;
    font-size: $font-size-lg;
    font-weight: $font-weight-semibold;
    color: $text-primary;
  }
  
  .close-button {
    background: none;
    border: none;
    color: $text-secondary;
    font-size: $font-size-xl;
    cursor: pointer;
    width: 32px;
    height: 32px;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 50%;
    transition: background-color 0.2s;
    
    &:hover {
      background-color: $background-light;
      color: $text-primary;
    }
  }
}

.modal-body {
  padding: $spacing-4;
  overflow-y: auto;
  flex: 1;
  
  .textarea-container {
    width: 100%;
    
    .json-textarea {
      width: 100%;
      min-height: 200px;
      padding: $spacing-3;
      border: 1px solid $border-color;
      border-radius: $radius-sm;
      font-family: $font-family-mono;
      font-size: $font-size-sm;
      line-height: 1.6;
      resize: vertical;
      color: $text-primary;
      background-color: $background-light;
      transition: border-color 0.2s, box-shadow 0.2s;
      
      &:focus {
        outline: none;
        border-color: $primary;
        box-shadow: 0 0 0 2px rgba($primary, 0.1);
      }
      
      &.invalid {
        border-color: $error;
        
        &:focus {
          box-shadow: 0 0 0 2px rgba($error, 0.1);
        }
      }
      
      &::placeholder {
        color: $text-tertiary;
      }
    }
  }
  
  .modal-error {
    margin-top: $spacing-2;
    color: $error;
    font-size: $font-size-sm;
    padding: $spacing-2 $spacing-3;
    background-color: rgba($error, 0.05);
    border-radius: $radius-sm;
    border-left: 3px solid $error;
  }
}

.modal-footer {
  padding: $spacing-4;
  border-top: 1px solid $border-color;
  display: flex;
  justify-content: space-between;
  
  .modal-actions, .modal-main-actions {
    display: flex;
    gap: $spacing-2;
  }
}

// Make sure the QracButton components are properly styled
::ng-deep {
  .json-actions {
    .add-key-btn, .edit-json-btn {
      // Additional specificity to ensure button styles apply
      &.qrac-button {
        font-size: $font-size-xs !important;
        height: 32px !important;
        min-width: 100px !important;
        
        // Apply button colors properly
        &.primary-button {
          background-color: $primary !important;
          color: white !important;
          border: none !important;
          
          &:hover {
            background-color: darken($primary, 5%) !important;
          }
        }
        
        &.secondary-button {
          background-color: white !important;
          color: $text-primary !important;
          border: 1px solid $border-color !important;
          
          &:hover {
            background-color: $background-light !important;
          }
        }
        
        &.danger-button {
          background-color: $error !important;
          color: white !important;
          border: none !important;
          
          &:hover {
            background-color: darken($error, 5%) !important;
          }
        }
      }
    }
  }
}

// Animations
@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

@keyframes scaleIn {
  from { 
    transform: scale(0.9);
    opacity: 0;
  }
  to { 
    transform: scale(1);
    opacity: 1;
  }
}

// Media queries for responsive design
@include media-breakpoint-down(md) {
  .modal-dialog {
    width: 95%;
  }
  
  .modal-body {
    padding: $spacing-3;
    
    .json-textarea {
      min-height: 150px;
    }
  }
  
  .modal-footer {
    flex-direction: column;
    gap: $spacing-3;
    
    .modal-actions, .modal-main-actions {
      justify-content: center;
    }
  }
}