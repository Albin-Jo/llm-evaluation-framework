"""Initial migration

Revision ID: 462ff4ab634c
Revises:
Create Date: 2025-05-06 18:56:18.645725

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "462ff4ab634c"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "agent",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("api_endpoint", sa.String(length=255), nullable=False),
        sa.Column("domain", sa.String(length=100), nullable=False),
        sa.Column("config", sa.JSON(), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("model_type", sa.String(length=100), nullable=True),
        sa.Column("version", sa.String(length=50), nullable=False),
        sa.Column("tags", sa.JSON(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_index("idx_agent_domain", "agent", ["domain"], unique=False)
    op.create_index(
        "idx_agent_domain_is_active", "agent", ["domain", "is_active"], unique=False
    )
    op.create_index("idx_agent_is_active", "agent", ["is_active"], unique=False)
    op.create_index("idx_agent_name", "agent", ["name"], unique=False)
    op.create_table(
        "dataset",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column(
            "type",
            sa.Enum(
                "USER_QUERY",
                "CONTEXT",
                "QUESTION_ANSWER",
                "CONVERSATION",
                "CUSTOM",
                name="datasettype",
            ),
            nullable=False,
        ),
        sa.Column("file_path", sa.String(length=255), nullable=False),
        sa.Column("schema_definition", sa.JSON(), nullable=True),
        sa.Column("meta_info", sa.JSON(), nullable=True),
        sa.Column("version", sa.String(length=50), nullable=False),
        sa.Column("row_count", sa.Integer(), nullable=True),
        sa.Column("is_public", sa.Boolean(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("idx_dataset_is_public", "dataset", ["is_public"], unique=False)
    op.create_index("idx_dataset_name", "dataset", ["name"], unique=False)
    op.create_index("idx_dataset_type", "dataset", ["type"], unique=False)
    op.create_index(
        "idx_dataset_type_is_public", "dataset", ["type", "is_public"], unique=False
    )
    op.create_table(
        "prompttemplate",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("template", sa.Text(), nullable=False),
        sa.Column("variables", sa.JSON(), nullable=True),
        sa.Column("is_public", sa.Boolean(), nullable=False),
        sa.Column("version", sa.String(length=50), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "idx_prompttemplate_is_public", "prompttemplate", ["is_public"], unique=False
    )
    op.create_index("idx_prompttemplate_name", "prompttemplate", ["name"], unique=False)
    op.create_table(
        "user",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("external_id", sa.String(length=255), nullable=False),
        sa.Column("email", sa.String(length=255), nullable=False),
        sa.Column("display_name", sa.String(length=255), nullable=False),
        sa.Column(
            "role",
            sa.Enum("ADMIN", "EVALUATOR", "VIEWER", name="userrole"),
            nullable=False,
        ),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
        sa.UniqueConstraint("external_id"),
    )
    op.create_index("idx_user_email", "user", ["email"], unique=False)
    op.create_index("idx_user_external_id", "user", ["external_id"], unique=False)
    op.create_table(
        "prompt",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("content", sa.Text(), nullable=False),
        sa.Column("parameters", sa.JSON(), nullable=True),
        sa.Column("version", sa.String(length=50), nullable=False),
        sa.Column("is_public", sa.Boolean(), nullable=False),
        sa.Column("template_id", sa.UUID(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["template_id"],
            ["prompttemplate.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("idx_prompt_is_public", "prompt", ["is_public"], unique=False)
    op.create_index("idx_prompt_name", "prompt", ["name"], unique=False)
    op.create_index("idx_prompt_template_id", "prompt", ["template_id"], unique=False)
    op.create_table(
        "evaluation",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column(
            "method",
            sa.Enum("RAGAS", "DEEPEVAL", "CUSTOM", "MANUAL", name="evaluationmethod"),
            nullable=False,
        ),
        sa.Column(
            "status",
            sa.Enum(
                "PENDING",
                "RUNNING",
                "COMPLETED",
                "FAILED",
                "CANCELLED",
                name="evaluationstatus",
            ),
            nullable=False,
        ),
        sa.Column("config", sa.JSON(), nullable=True),
        sa.Column("metrics", sa.JSON(), nullable=True),
        sa.Column("experiment_id", sa.String(length=255), nullable=True),
        sa.Column("start_time", sa.DateTime(timezone=True), nullable=True),
        sa.Column("end_time", sa.DateTime(timezone=True), nullable=True),
        sa.Column("agent_id", sa.UUID(), nullable=False),
        sa.Column("dataset_id", sa.UUID(), nullable=False),
        sa.Column("prompt_id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["agent_id"],
            ["agent.id"],
        ),
        sa.ForeignKeyConstraint(
            ["dataset_id"],
            ["dataset.id"],
        ),
        sa.ForeignKeyConstraint(
            ["prompt_id"],
            ["prompt.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("idx_evaluation_agent_id", "evaluation", ["agent_id"], unique=False)
    op.create_index(
        "idx_evaluation_dataset_id", "evaluation", ["dataset_id"], unique=False
    )
    op.create_index("idx_evaluation_method", "evaluation", ["method"], unique=False)
    op.create_index("idx_evaluation_name", "evaluation", ["name"], unique=False)
    op.create_index(
        "idx_evaluation_prompt_id", "evaluation", ["prompt_id"], unique=False
    )
    op.create_index("idx_evaluation_status", "evaluation", ["status"], unique=False)
    op.create_index(
        "idx_evaluation_status_created_at",
        "evaluation",
        ["status", "created_at"],
        unique=False,
    )
    op.create_table(
        "evaluation_comparison",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("evaluation_a_id", sa.UUID(), nullable=False),
        sa.Column("evaluation_b_id", sa.UUID(), nullable=False),
        sa.Column("comparison_results", sa.JSON(), nullable=True),
        sa.ForeignKeyConstraint(
            ["evaluation_a_id"],
            ["evaluation.id"],
        ),
        sa.ForeignKeyConstraint(
            ["evaluation_b_id"],
            ["evaluation.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "evaluationresult",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("overall_score", sa.Float(), nullable=True),
        sa.Column("raw_results", sa.JSON(), nullable=True),
        sa.Column("dataset_sample_id", sa.String(length=255), nullable=True),
        sa.Column("input_data", sa.JSON(), nullable=True),
        sa.Column("output_data", sa.JSON(), nullable=True),
        sa.Column("processing_time_ms", sa.Integer(), nullable=True),
        sa.Column("evaluation_id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["evaluation_id"],
            ["evaluation.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "idx_evaluationresult_evaluation_id",
        "evaluationresult",
        ["evaluation_id"],
        unique=False,
    )
    op.create_index(
        "idx_evaluationresult_overall_score",
        "evaluationresult",
        ["overall_score"],
        unique=False,
    )
    op.create_table(
        "report",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column(
            "status",
            sa.Enum("DRAFT", "GENERATED", "SENT", "FAILED", name="reportstatus"),
            nullable=False,
        ),
        sa.Column(
            "format",
            sa.Enum("PDF", "HTML", "JSON", name="reportformat"),
            nullable=False,
        ),
        sa.Column("content", sa.JSON(), nullable=True),
        sa.Column("config", sa.JSON(), nullable=True),
        sa.Column("file_path", sa.String(length=255), nullable=True),
        sa.Column("last_sent_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("evaluation_id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["evaluation_id"],
            ["evaluation.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "idx_report_evaluation_id", "report", ["evaluation_id"], unique=False
    )
    op.create_index("idx_report_name", "report", ["name"], unique=False)
    op.create_index("idx_report_status", "report", ["status"], unique=False)
    op.create_index(
        "idx_report_status_format", "report", ["status", "format"], unique=False
    )
    op.create_table(
        "metricscore",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("value", sa.Float(), nullable=False),
        sa.Column("weight", sa.Float(), nullable=False),
        sa.Column("meta_info", sa.JSON(), nullable=True),
        sa.Column("result_id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["result_id"],
            ["evaluationresult.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("idx_metricscore_name", "metricscore", ["name"], unique=False)
    op.create_index(
        "idx_metricscore_result_id", "metricscore", ["result_id"], unique=False
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index("idx_metricscore_result_id", table_name="metricscore")
    op.drop_index("idx_metricscore_name", table_name="metricscore")
    op.drop_table("metricscore")
    op.drop_index("idx_report_status_format", table_name="report")
    op.drop_index("idx_report_status", table_name="report")
    op.drop_index("idx_report_name", table_name="report")
    op.drop_index("idx_report_evaluation_id", table_name="report")
    op.drop_table("report")
    op.drop_index("idx_evaluationresult_overall_score", table_name="evaluationresult")
    op.drop_index("idx_evaluationresult_evaluation_id", table_name="evaluationresult")
    op.drop_table("evaluationresult")
    op.drop_table("evaluation_comparison")
    op.drop_index("idx_evaluation_status_created_at", table_name="evaluation")
    op.drop_index("idx_evaluation_status", table_name="evaluation")
    op.drop_index("idx_evaluation_prompt_id", table_name="evaluation")
    op.drop_index("idx_evaluation_name", table_name="evaluation")
    op.drop_index("idx_evaluation_method", table_name="evaluation")
    op.drop_index("idx_evaluation_dataset_id", table_name="evaluation")
    op.drop_index("idx_evaluation_agent_id", table_name="evaluation")
    op.drop_table("evaluation")
    op.drop_index("idx_prompt_template_id", table_name="prompt")
    op.drop_index("idx_prompt_name", table_name="prompt")
    op.drop_index("idx_prompt_is_public", table_name="prompt")
    op.drop_table("prompt")
    op.drop_index("idx_user_external_id", table_name="user")
    op.drop_index("idx_user_email", table_name="user")
    op.drop_table("user")
    op.drop_index("idx_prompttemplate_name", table_name="prompttemplate")
    op.drop_index("idx_prompttemplate_is_public", table_name="prompttemplate")
    op.drop_table("prompttemplate")
    op.drop_index("idx_dataset_type_is_public", table_name="dataset")
    op.drop_index("idx_dataset_type", table_name="dataset")
    op.drop_index("idx_dataset_name", table_name="dataset")
    op.drop_index("idx_dataset_is_public", table_name="dataset")
    op.drop_table("dataset")
    op.drop_index("idx_agent_name", table_name="agent")
    op.drop_index("idx_agent_is_active", table_name="agent")
    op.drop_index("idx_agent_domain_is_active", table_name="agent")
    op.drop_index("idx_agent_domain", table_name="agent")
    op.drop_table("agent")
    # ### end Alembic commands ###
